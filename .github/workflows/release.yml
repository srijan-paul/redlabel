name: Create Release with Binaries

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.8.6
  workflow_dispatch:  # Allow manual trigger
    inputs:
      tag:
        description: 'Release tag (e.g., v1.8.6)'
        required: true
        type: string

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5>=5.14.0 lxml>=4.6.0 pyinstaller ultralytics>=8.3.160
    
    - name: Generate resources
      run: |
        python -m PyQt5.pyrcc_main resources.qrc -o libs/resources.py
    
    - name: Build executable
      run: |
        pyinstaller redlabel.spec
    
    - name: Get version
      id: version
      run: |
        if ("${{ github.event.inputs.tag }}" -ne "") {
          $VERSION = "${{ github.event.inputs.tag }}"
        } else {
          $VERSION = "${{ github.ref_name }}"
        }
        echo "VERSION=$VERSION" >> $env:GITHUB_OUTPUT
        echo "VERSION_CLEAN=$($VERSION -replace '^v', '')" >> $env:GITHUB_OUTPUT
    
    - name: Create distribution
      run: |
        $VERSION = "${{ steps.version.outputs.VERSION_CLEAN }}"
        $DIST_FOLDER = "RedLabel-$VERSION-Windows-Standalone"
        
        if (Test-Path $DIST_FOLDER) { Remove-Item -Recurse -Force $DIST_FOLDER }
        New-Item -ItemType Directory $DIST_FOLDER
        
        Copy-Item "dist/RedLabel.exe" $DIST_FOLDER
        Copy-Item "README.md" $DIST_FOLDER
        Copy-Item "LICENSE" $DIST_FOLDER
        
        # Create zip file
        Compress-Archive -Path $DIST_FOLDER -DestinationPath "$DIST_FOLDER.zip"
    
    - name: Upload Windows Binary
      uses: actions/upload-artifact@v4
      with:
        name: windows-binary
        path: RedLabel-*-Windows-Standalone.zip
        retention-days: 5

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt5>=5.14.0 lxml>=4.6.0 pyinstaller ultralytics>=8.3.160
    
    - name: Generate resources
      run: |
        pyrcc5 -o libs/resources.py resources.qrc
    
    - name: Build executable
      run: |
        pyinstaller redlabel.spec
    
    - name: Get version
      id: version
      run: |
        if [ -n "${{ github.event.inputs.tag }}" ]; then
          VERSION="${{ github.event.inputs.tag }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_CLEAN=${VERSION#v}" >> $GITHUB_OUTPUT
    
    - name: Create distribution
      run: |
        VERSION="${{ steps.version.outputs.VERSION_CLEAN }}"
        DIST_FOLDER="RedLabel-$VERSION-macOS-Standalone"
        
        rm -rf "$DIST_FOLDER"
        mkdir -p "$DIST_FOLDER"
        
        cp -r "dist/RedLabel.app" "$DIST_FOLDER/"
        cp "README.md" "$DIST_FOLDER/"
        cp "LICENSE" "$DIST_FOLDER/"
        
        # Create zip file
        zip -r "$DIST_FOLDER.zip" "$DIST_FOLDER"
    
    - name: Upload macOS Binary
      uses: actions/upload-artifact@v4
      with:
        name: macos-binary
        path: RedLabel-*-macOS-Standalone.zip
        retention-days: 5

  create-release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Get version
      id: version
      run: |
        if [ -n "${{ github.event.inputs.tag }}" ]; then
          VERSION="${{ github.event.inputs.tag }}"
        else
          VERSION="${{ github.ref_name }}"
        fi
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        echo "VERSION_CLEAN=${VERSION#v}" >> $GITHUB_OUTPUT
    
    - name: Download Windows Binary
      uses: actions/download-artifact@v4
      with:
        name: windows-binary
        path: ./artifacts
    
    - name: Download macOS Binary
      uses: actions/download-artifact@v4
      with:
        name: macos-binary
        path: ./artifacts
    
    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: RedLabel ${{ steps.version.outputs.VERSION }}
        body: |
          ## RedLabel ${{ steps.version.outputs.VERSION }}
          
          ### Downloads
          - **Windows**: RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-Windows-Standalone.zip
          - **macOS**: RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-macOS-Standalone.zip
          
          ### Installation
          1. Download the appropriate zip file for your platform
          2. Extract the contents
          3. Run the RedLabel executable
          
          ### Changes
          See commit history for detailed changes in this release.
        draft: false
        prerelease: false
    
    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-Windows-Standalone.zip
        asset_name: RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-Windows-Standalone.zip
        asset_content_type: application/zip
    
    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./artifacts/RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-macOS-Standalone.zip
        asset_name: RedLabel-${{ steps.version.outputs.VERSION_CLEAN }}-macOS-Standalone.zip
        asset_content_type: application/zip
